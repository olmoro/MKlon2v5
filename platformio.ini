; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;  и
; https://docs.platformio.org/en/latest/projectconf/index.html
; Комментарии отсюда: https://kotyara12.ru/pubs/iot/crawl-to-pio/

[env]
build_flags =
 ; Опция указывает компилятору где искать исходники проекта. 
 ; Дело в том, что все мои библиотеки находятся в каталоге, отличном от каталога проекта. 
 ; А в каталоге проекта лежит очень важный файл – “project_config.h“, в нем собраны все настройки проекта. 
 ; Который используется в том числе и самими библиотеками. 
 ; Если не указать, где его искать, библиотеки не будут скомпилированы. 
 ; Впрочем, Вы можете использовать другой подход, и Вам этот параметр не понадобится.
 -Isrc

monitor_filters =
  ; Опции монитора COM-порта. У меня включен прямой вывод, необходимый для вывода логов в цвете. 
  ; На Windows 7 включать бесполезно, все равно не заработает. 
  ; Кроме того, в программе для ESP32 должна быть включена соответствующая опция. 
  ; Есть достаточно много параметров монитора...
  direct

lib_deps =
  ; Публичные библиотеки. 
  ; Если библиотека не установлена в PIO, то VSCode сам ее найдет и установит перед первым использованием. Удобно.
  ;256dpi/LWMQTT @ ^0.6.4
  ;hieromon/AutoConnect@^1.3.7
  ;hieromon/PageBuilder@^1.5.3

lib_extra_dirs = E:\Projects\ESP32\ESP32Lib
  ; Локальные библиотеки.
  ; Папки с локальными библиотеками. 
  ; В данном конкретном случае это мои библиотеки, но можно туда поместить и другие. 
  ; Не нужно указывать пути к каждой отдельной библиотеке, но если библиотеки сгруппированы в подпапки (как у меня), 
  ; то придется указать пути ко всем расположениям.
  ; C:\PlatformIO\libs\system
  ; C:\PlatformIO\libs\wifi

;board_bild.partition = 
;  ; Указывает на файл с разметкой flash-памяти ESP-шки. 
;  ; Это отдельный большой разговор, я не буду останавливаться на нем в рамках данной статьи. По умолчанию нафиг не нужен.
;  ;partition.csv
;  default_16MB.csv

board_build.embed_txtfiles =
  ; Указывает на дополнительные файлы, которые следует подключить к проекту. 
  ; Например, PEM-файлы с сертификатами для TLS-соединений (certs/dst_root_ca_x3.pem и т.п.). 
  ; Но этого мало! Для ESP-IDF придется дополнительно прописать эти же файлы в другом файле конфигурации CMakeLists.txt:

  ;# This file was automatically generated for projects
  ;# without default 'CMakeLists.txt' file.
  ;
  ;FILE(GLOB_RECURSE app_sources ${CMAKE_SOURCE_DIR}/src/*.*)
  ;idf_component_register(SRCS ${app_sources})
  ;
  ;target_add_binary_data(${COMPONENT_TARGET} ${CMAKE_SOURCE_DIR}/certs/dst_root_ca_x3.pem TEXT)
  ;target_add_binary_data(${COMPONENT_TARGET} ${CMAKE_SOURCE_DIR}/certs/api_telegram_org.pem TEXT)

[env:esp32dev]
  ; Определяет настройки сборки проекта для конкретной платы – тип платы, платформу, фреймфорк, 
  ; скорость монитора и заливки bin-файла на плату. 
  ; Как ни странно, скорость upload выше скорости монитора, так как скорость передачи в порт определяется самой платой. 
  ; Допустимые варианты: 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 74880, 115200, 230400, 256000, 
  ; 460800, 921600, 1843200, 3686400. Опытным путем установлено, что выше 921600 ставить смысла нет.
platform = espressif32
board = esp32dev
;framework = espidf
framework = arduino
board_build.flash_mode = qio

upload_port = COM10  ; DOWNLOADER FOR ESP-WROOM-32
;upload_port = COM9

upload_speed = 921600
monitor_speed = 115200

board_build.partitions = default_16MB.csv   ;Закомментировать для ESP32 4MB (XX0H32)

build_flags =
  -Os
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
  -DUSER_SETUP_LOADED=1           ; Настройки драйвера ST7735 (User_Setup.h)

build_src_flags =
  ;-DMKLON2V7=1         ; Проба для подключенного по другой схеме дисплея (MKlon2.7)
  ;-DOLD_DISPLAY        ; Adafruit_ST7735, иначе TFT_eSPI

  -DUART2=1              ; порт драйвера
;  -DTEST_KEYS_CLEAR=1   ; Сообщать об очистке всех ключей раздела

  ;-D DEBUG_KEYS = 1     ; DEBUG_KEYS
  ;-D PRINT_KEY = 1
  ;-D DEBUG_BUTTON = 1   ; Клавиатура на делителе
  
  ;; Отладка порогов срабатывания кнопок
  ;;-D DEBUD_TOUCH_UP = 1
  ;;-D DEBUD_TOUCH_DN = 1
  ;;-D DEBUD_TOUCH_P = 1
  ;;-D DEBUD_TOUCH_B = 1
  ;;-D DEBUD_TOUCH_C = 1

  ;-DDEBUG_PID=1   перенесено в project_config.h

  ; исправления проблем
  ; button.cpp    - L56, 71, 84, 97 unused dt
  ; fsbrowser.cpp - L107 unused size_t
  ;    
  
  ;-D WO_VIS       ; Отправляются только целевые команды

  -D TESTCCCV=1
  ;-D STATE=1
  -D PRINT_PID=1

  -D PRINT_OPTION=1
  -D PRINT_DISCHARGE=1
  -D PRINTDEVICE=1
  -D PRINTDISP=1    ; диспетчер

